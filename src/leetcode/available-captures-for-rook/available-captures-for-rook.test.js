import { numRookCaptures } from './available-captures-for-rook';

describe('[Leetcode] numRookCaptures', () => {
  test('example #1', () => {
    expect(
      numRookCaptures([
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', 'p', '.', '.', '.', '.'],
        ['.', '.', '.', 'R', '.', '.', '.', 'p'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', 'p', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.']
      ])
    ).toBe(3);
  });

  test('example #2', () => {
    expect(
      numRookCaptures([
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
        ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
        ['.', 'p', 'B', 'R', 'B', 'p', '.', '.'],
        ['.', 'p', 'p', 'B', 'p', 'p', '.', '.'],
        ['.', 'p', 'p', 'p', 'p', 'p', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.']
      ])
    ).toBe(0);
  });

  test('example #3', () => {
    expect(
      numRookCaptures([
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', 'p', '.', '.', '.', '.'],
        ['.', '.', '.', 'p', '.', '.', '.', '.'],
        ['p', 'p', '.', 'R', '.', 'p', 'B', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', '.', 'B', '.', '.', '.', '.'],
        ['.', '.', '.', 'p', '.', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.']
      ])
    ).toBe(3);
  });

  test('example #4', () => {
    expect(
      numRookCaptures([
        ['.', '.', '.', '.', '.', '.', '.', '.'],
        ['.', '.', 'B', 'B', 'B', 'B', 'B', '.'],
        ['.', 'p', 'B', 'p', 'p', 'p', 'B', 'p'],
        ['.', 'p', 'B', 'p', 'R', 'p', 'B', 'p'],
        ['.', 'p', 'B', 'p', 'p', 'p', 'B', 'p'],
        ['.', '.', 'B', 'B', 'B', 'B', 'B', '.'],
        ['.', '.', '.', 'p', 'p', 'p', '.', '.'],
        ['.', '.', '.', '.', '.', '.', '.', '.']
      ])
    ).toBe(4);
  });
});
